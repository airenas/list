import com.aireno.gradle.DCRedeploy
import com.aireno.gradle.DBuild
import com.aireno.gradle.DPush

def main_dir = GO_SRC_DIR + "cmd/cmdWorkerService/"
def dist_dir = "deploy/"
def cmdDir = "/home/airenas/projects/list/src/decode/audio.prepare/"

def service = "audio-prepare-service"

task clean(type: Delete, group: group, description: "Deletes copied resources") {
    delete dist_dir
}

task build(type: Exec, group: group, description: "Compiles servise") {
    commandLine 'go', 'build', '-installsuffix', 'cgo' 
    workingDir main_dir
    environment CGO_ENABLED:0
}

task copy(type: Copy, group: group, description: "Copies service") {
    from main_dir
    into dist_dir
    include "cmdWorkerService"
    dependsOn 'build'
    dependsOn 'copyCmd'
}

task copyCmd(type: Copy, group: group, description: "Copies command files") {
    from cmdDir
    into dist_dir + "/cmd"
    include "Makefile"
}

task ddeploy(type: DCRedeploy, group: group, description: "Deploys audio-prepare service") {
    serviceName = 'audio-prepare-service'
    composePath = './..'
    mustRunAfter('copy')
}

task dbuild(type: DBuild, group: group) {
    tag = 'airenas/list-audio-prepare-service:' + AUDIO_PREPARE_SERVICE_VERSION
    mustRunAfter('copy')
}

task dpush(type: DPush, group: group) {
    tag = 'airenas/list-audio-prepare-service:' + AUDIO_PREPARE_SERVICE_VERSION
    mustRunAfter('dbuild')
}

task dall(group: group) {
    dependsOn 'copy'
    dependsOn 'dbuild'
    dependsOn 'dpush'
}

task ddeploy_words(type: DCRedeploy, group: project.name) {
    serviceName = service
    composePath = './..'
    projectName = project_name_words
    fileName = compose_file_words
    mustRunAfter('copy')
}

task rd(group: project.name) {
    dependsOn copy, dbuild, ddeploy
}

task rd_words(group: project.name) {
    dependsOn copy, dbuild, ddeploy_words
}
