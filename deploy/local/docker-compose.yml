version: '3.7'

services:
  proxy:
    image: traefik:1.7.9 # The official Traefik docker image
    command: --api --docker # Enables the web UI and tells Tr√¶fik to listen to docker
    ports:
      - "${LIST_TRAEFIK_HTTP_EXT_PORT}:80"     # main proxy port
      - "${LIST_TRAEFIK_HTTPS_EXT_PORT}:443"     # https proxy port
      - "${LIST_TRAEFFIC_EXT_PORT}:8080"   # proxy dashboard
    environment:
      CLOUDFLARE_EMAIL: ${CF_API_EMAIL}
      CLOUDFLARE_API_KEY: ${CF_API_KEY}  
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - ./traefik/traefik.toml:/traefik.toml
      - ./traefik/acme.json:/acme.json
    restart: unless-stopped

  web:
    build: web
    restart: unless-stopped
    environment:
      BASE_HREF: /${URL_WORDS}/
    labels:
     - "traefik.enable=true"
     - "traefik.http.frontend.rule=PathPrefixStrip:/${URL_WORDS}/"
     - "traefik.http.port=8000"

  upload-service:
    build: upload
    restart: unless-stopped
    volumes:
      - fileStorage:/data
      - modelsStorage:/models  
    depends_on: 
      - rabbitmq  
      - mongo
    environment:
      MESSAGESERVER_URL: ${LIST_RABBITMQ_URL}
      MESSAGESERVER_USER: ${LIST_RABBITMQ_USER}
      MESSAGESERVER_PASS: ${LIST_RABBITMQ_PASS}
      MONGO_URL: ${LIST_MONGO_URL}
    labels:
     - "traefik.frontend.rule=PathPrefixStrip:/${URL_WORDS}/transcriber/"
     - "traefik.port=8000" 
  
  result-service:
    build: result
    restart: unless-stopped
    volumes:
      - fileStorage:/data
    depends_on: 
      - mongo
    environment:
      MONGO_URL: ${LIST_MONGO_URL}
    labels:
     - "traefik.frontend.rule=PathPrefixStrip:/${URL_WORDS}/result.service/"
     - "traefik.port=8000"  

  status-service:
    build: status
    restart: unless-stopped
    depends_on: 
      - mongo
      - rabbitmq
    environment:
      MESSAGESERVER_URL: ${LIST_RABBITMQ_URL}
      MESSAGESERVER_USER: ${LIST_RABBITMQ_USER}
      MESSAGESERVER_PASS: ${LIST_RABBITMQ_PASS}
      MONGO_URL: ${LIST_MONGO_URL}    
    labels:
     - "traefik.frontend.rule=PathPrefixStrip:/${URL_WORDS}/status.service/"
     - "traefik.port=8000" 
  
  manager-service:
    build: manager
    restart: unless-stopped
    depends_on: 
      - mongo
      - rabbitmq
    environment:
      MESSAGESERVER_URL: ${LIST_RABBITMQ_URL}
      MESSAGESERVER_USER: ${LIST_RABBITMQ_USER}
      MESSAGESERVER_PASS: ${LIST_RABBITMQ_PASS}
      MONGO_URL: ${LIST_MONGO_URL}  
      SENDINFORMMESSAGES: "true"

  # kafka-integration-service:
  #   build: kafka.int
  #   environment:
  #     KAFKA_BROKERS: aserver:9092
  #     FS_URL: http://olia.com/
  #     TRANSCRIBER_URL_UPLOAD: http://olia.com/
  #     TRANSCRIBER_URL_STATUS: http://olia.com/
  #     TRANSCRIBER_URL_RESULT: http://olia.com/
  #     IDS_PATH: /tmp

  audio-prepare-service:
    build: audio.prepare
    restart: unless-stopped
    depends_on: 
      - rabbitmq
    environment:
      MESSAGESERVER_URL: ${LIST_RABBITMQ_URL}
      MESSAGESERVER_USER: ${LIST_RABBITMQ_USER}
      MESSAGESERVER_PASS: ${LIST_RABBITMQ_PASS}  
    volumes:
      - fileStorage:/data
      - modelsStorage:/models  

  diarization-service:
    build: diarization
    restart: unless-stopped
    depends_on: 
      - rabbitmq
    environment:
      MESSAGESERVER_URL: ${LIST_RABBITMQ_URL}
      MESSAGESERVER_USER: ${LIST_RABBITMQ_USER}
      MESSAGESERVER_PASS: ${LIST_RABBITMQ_PASS}  
    volumes:
      - fileStorage:/data    
      - appsStorage:/apps
      - modelsStorage:/models
  
  transcription-service:
    build: transcription
    restart: unless-stopped
    depends_on: 
      - rabbitmq
    environment:
      MESSAGESERVER_URL: ${LIST_RABBITMQ_URL}
      MESSAGESERVER_USER: ${LIST_RABBITMQ_USER}
      MESSAGESERVER_PASS: ${LIST_RABBITMQ_PASS}  
    volumes:
      - fileStorage:/data    
      - appsStorage:/apps
      - modelsStorage:/models 
      - modelsStorage2:/models2        
  
  result-make-service:
    build: result.make
    restart: unless-stopped
    depends_on: 
      - rabbitmq
    environment:
      MESSAGESERVER_URL: ${LIST_RABBITMQ_URL}
      MESSAGESERVER_USER: ${LIST_RABBITMQ_USER}
      MESSAGESERVER_PASS: ${LIST_RABBITMQ_PASS}  
      PR_URL: http://punctuation-service:8080/punctuation
    volumes:
      - fileStorage:/data    
      - appsStorage:/apps
      - modelsStorage:/models  
      - modelsStorage2:/models2  

  inform-service:
    build: inform
    restart: unless-stopped
    depends_on: 
      - rabbitmq
      - mongo
    environment:
      MESSAGESERVER_URL: ${LIST_RABBITMQ_URL}
      MESSAGESERVER_USER: ${LIST_RABBITMQ_USER}
      MESSAGESERVER_PASS: ${LIST_RABBITMQ_PASS}
      MONGO_URL: ${LIST_MONGO_URL}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      MAIL_URL: ${MAIL_URL}

  tensorflow:
    image: tensorflow/serving:1.14.0
    environment:
      MODEL_NAME: punctuation
      MODEL_BASE_PATH: /models/model
    volumes:
      - punctRestorationStorage:/models
    ports:
      - ${LIST_TF_GRPC_EXT_PORT}:8500
      - ${LIST_TF_EXT_PORT}:8501
    restart: unless-stopped 
  
  punctuation-service:
    build: punctuation
    restart: unless-stopped
    volumes:
      - punctRestorationStorage:/model
    environment:
      TF_URL: tensorflow:8500
    labels:
     - "traefik.frontend.rule=PathPrefixStrip:/punctuation/"
     - "traefik.port=8080"
  
  clean-service:
    build: clean
    restart: unless-stopped
    environment:
      MONGO_URL: ${LIST_MONGO_URL}
    volumes:
      - fileStorage:/data    

########### db & broker
  mongo:
    image: mongo:4.1.1
    environment:
      MONGO_DATA_DIR: "/data/db"
      MONGO_LOG_DIR: "/dev/null"
      MONGO_INITDB_ROOT_USERNAME: ${LIST_MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${LIST_MONGO_PASS}
    volumes:
      - mongo:/data/db
    ports:
      - ${LIST_MONGO_EXT_PORT}:27017
    restart: unless-stopped     
    command: mongod --logpath=/dev/null # --quiet

  rabbitmq:
    image: "rabbitmq:3.7-management"
    hostname: "rabbitmq"
    environment:
      RABBITMQ_ERLANG_COOKIE: "0eaf0f4e-7078-44b0-970d-1c3d1277f9f2"
      RABBITMQ_DEFAULT_USER: ${LIST_RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${LIST_RABBITMQ_PASS}
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "${LIST_RABBITMQ_EXT_PORT}:15672"
      - "5672:5672"
    labels:
      NAME: "rabbitmq"
    restart: unless-stopped  
    volumes:
      - rabbitmq:/var/lib/rabbitmq
########### volumes 
volumes:
  fileStorage:
    driver_opts:
      type: none
      device: ${LIST_VOLUMES_DIR}fileStorage
      o: bind

  appsStorage:
    driver_opts:
      type: none
      device: ${LIST_VOLUMES_DIR}apps
      o: bind

  modelsStorage:
    driver_opts:
      type: none
      device: ${LIST_VOLUMES_DIR}models
      o: bind  
  
  modelsStorage2:
    driver_opts:
      type: none
      device: ${MODEL_DIR_2}
      o: bind                   

  punctRestorationStorage:
    driver_opts:
      type: none
      device: ${PUNCT_RESTORATION_DIR_WORDS}
      o: bind      

  rabbitmq:
    driver_opts:
      type: none
      device: ${LIST_VOLUMES_DIR}rabbitmq
      o: bind     

  mongo:
    driver_opts:
      type: none
      device: ${LIST_VOLUMES_DIR}mongo
      o: bind