version: '3'

services:
  reverse-proxy:
    image: traefik # The official Traefik docker image
    command: --api --docker # Enables the web UI and tells Tr√¶fik to listen to docker
    ports:
      - "7050:80"     # main proxy port
      - "7051:8080"   # proxy dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
    restart: unless-stopped

  web:
    build: web
    restart: unless-stopped
    labels:
     - "traefik.frontend.rule=PathPrefixStrip:/ausis/"
     - "traefik.port=8000"

  upload-service:
    build: upload
    restart: unless-stopped
    volumes:
      - fileStorage:/data
    depends_on: 
      - redis  
      - mongo
    labels:
     - "traefik.frontend.rule=PathPrefixStrip:/ausis/transcriber/"
     - "traefik.port=8000"  

  status-service:
    build: status
    restart: unless-stopped
    depends_on: 
      - mongo
    labels:
     - "traefik.frontend.rule=PathPrefixStrip:/ausis/result.provider/"
     - "traefik.port=8000"     

  redis:
    image: redis
    ports:
     - "6379:6379"
    volumes:
     - redis:/data
    restart: unless-stopped    

  mongo:
    image: mongo:4.1.1
    environment:
     - MONGO_DATA_DIR=/data/db
     - MONGO_LOG_DIR=/dev/null
    #  - MONGODB_USER="list" 
    #  - MONGODB_PASS="list2018"
    volumes:
     - mongo:/data/db
    ports:
     - 27018:27017
    restart: unless-stopped     
    command: mongod --logpath=/dev/null # --quiet


  # membrane:
  #   image: airenas/membrane
  #   depends_on: 
  #    - redis
  #   volumes:
  #    - /home/airenas/list/test.volume/:/data
  #   restart: unless-stopped 
  #   labels:
  #    - "traefik.service.frontend.rule=PathPrefixStrip:/ausis/transcriber/"
  #   user: "1002"

  # mouth:
  #   image: airenas/mouth
  #   volumes:
  #    - /home/airenas/list/test.volume/:/data
  #   restart: unless-stopped 
  #   labels:
  #    - "traefik.service.frontend.rule=PathPrefixStrip:/ausis/result.provider/"

volumes:
  fileStorage:
    driver_opts:
      type: none
      device: /home/airenas/projects/list/volumes/fileStorage
      o: bind

  redis:
    driver_opts:
      type: none
      device: /home/airenas/projects/list/volumes/redis
      o: bind   

  mongo:
    driver_opts:
      type: none
      device: /home/airenas/projects/list/volumes/mongo
      o: bind