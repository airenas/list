ext.main_dir = new File(project.projectDir, '../../').getCanonicalPath() + '/'
ext.go_build_dir = new File(main_dir, '../listgo/').getCanonicalPath() + '/'
ext.cmd_src_dir = ext.main_dir + 'src/decode/'
ext.local_compose_dir = ext.main_dir + 'deploy/local/'
ext.project_name_words = 'list-words'
ext.compose_file_words = 'docker-compose.words.yml'

ext.docker_container_prefix='list-'

task info(group: project.name, description: "shows parameters info") {
    println 'EAR_APP_VERSION=\t' + EAR_APP_VERSION
    println 'UPLOAD_SERVICE_VERSION=\t' + UPLOAD_SERVICE_VERSION
    println 'TRANSCRIPTION_SERVICE_VERSION=\t' + TRANSCRIPTION_SERVICE_VERSION
    println 'INFORM_SERVICE_VERSION=\t' + INFORM_SERVICE_VERSION
    println 'RESULT_SERVICE_VERSION=\t' + RESULT_SERVICE_VERSION
    println 'TR_RESULT_SERVICE_VERSION=\t' + TR_RESULT_SERVICE_VERSION
}

task clean_all(type: Delete, group: project.name, description: "Deletes copied resources") {
    dependsOn 'web:clean'
    dependsOn 'upload:clean'
    dependsOn 'status:clean'
    dependsOn 'manager:clean'
    dependsOn 'audio.prepare:clean'
    dependsOn 'diarization:clean'
    dependsOn 'transcription:clean'
    dependsOn 'result.make:clean'
    dependsOn 'inform:clean'
}

task copy_all(group: project.name, description: "Copies all resourses") {
    dependsOn('web:copy')
    dependsOn('upload:copy')
    dependsOn('status:copy')
    dependsOn('manager:copy')
    dependsOn('audio.prepare:copy')
    dependsOn('diarization:copy')
    dependsOn('transcription:copy')
    dependsOn('result.make:copy')
    dependsOn 'inform:copy'
}

task deploy_all(group: project.name, description: "Redeploys docker") {
    doLast {
    exec {
        commandLine 'docker-compose', 'stop'
    }
    exec {
        commandLine 'docker-compose', 'rm', '-f'
    }
    exec {
        commandLine 'docker-compose', 'build'
    }
    exec {
        commandLine 'docker-compose', 'up', '-d'
    }
    }
    mustRunAfter copy_all
}

task build_deploy_all(group: project.name, description: "Builds souce and deploys services to docker") {
    dependsOn('copy_all')
    dependsOn('deploy_all')
}
