import com.aireno.gradle.DCRedeploy
import com.aireno.gradle.DBuild
import com.aireno.gradle.DPush

def dist_dir = "deploy/"
def executable_name = 'cmdWorkerService'
def main_dir = go_build_dir + "cmd/" + executable_name
def service_name = 'transcription-service'

task clean(type: Delete, group: project.name) {
    delete dist_dir
}

task build(type: Exec, group: group, description: "Compiles servise") {
    commandLine 'go', 'build', '-installsuffix', 'cgo' 
    workingDir main_dir
    environment CGO_ENABLED:0
}

task copyCmd(type: Copy, group: project.name, description: "Copies command files") {
    from cmd_src_dir + "transcription"
    into dist_dir + "/cmd"
    include "Makefile"
}

task copy(type: Copy, group: project.name, description: "Copies service") {
    from main_dir
    into dist_dir
    include executable_name
    dependsOn build, copyCmd
}


task ddeploy(type: DCRedeploy, group: project.name, description: "Deploys transcription service") {
    serviceName = service_name
    composePath = local_compose_dir
    mustRunAfter copy
}

task dbuild(type: DBuild, group: project.name) {
    tag = 'airenas/' + docker_container_prefix + service_name + ':' + TRANSCRIPTION_SERVICE_VERSION
    mustRunAfter('copy')
}

task dpush(type: DPush, group: project.name) {
    tag = 'airenas/' + docker_container_prefix + service_name + ':' + TRANSCRIPTION_SERVICE_VERSION
    mustRunAfter('dbuild')
}

task dall(group: project.name) {
    dependsOn copy, dbuild, dpush
}

task rd(group: project.name) {
    dependsOn copy, ddeploy
}
