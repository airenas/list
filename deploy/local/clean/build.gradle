import com.aireno.gradle.DCRedeploy
import com.aireno.gradle.DBuild
import com.aireno.gradle.DPush

def dist_dir = "deploy/"
def executable_name = 'cleanService'
def main_dir = go_build_dir + "cmd/" + executable_name
def service = 'clean-service'

task clean(type: Delete, group: project.name) {
    delete dist_dir
}

task build(type: Exec, group: group) {
    commandLine 'go', 'build', '-installsuffix', 'cgo' 
    workingDir main_dir
    environment CGO_ENABLED:0
}

task copy(type: Copy, group: project.name) {
    from main_dir
    into dist_dir
    include executable_name
    dependsOn build
}

task dbuild(type: DBuild, group: project.name) {
    tag = 'airenas/' + docker_container_prefix + service + ':' + CLEAN_SERVICE_VERSION
    mustRunAfter('copy')
}

task dpush(type: DPush, group: project.name) {
    tag = 'airenas/' + docker_container_prefix + service + ':' + CLEAN_SERVICE_VERSION
    mustRunAfter('dbuild')
}

task dall(group: project.name) {
    dependsOn copy, dbuild, dpush
}

task ddeploy_words(type: DCRedeploy, group: project.name) {
    serviceName = service
    composePath = './..'
    projectName = project_name_words
    fileName = compose_file_words
    mustRunAfter('copy')
}

task rd_words(group: project.name) {
    dependsOn copy, ddeploy_words
}
