/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
plugins {
    id 'org.hidetake.ssh' version '2.9.0'
}

ext {
    earAppVersion = "beta.v0.2"
}

def group="production"

def servicesDir = projectDir.getAbsolutePath() + "/services"
def distDir = servicesDir + "/data/"

def dockerTag(context, name_local, name) {
    context.commandLine 'docker', 'tag', 'deploy_' + name_local, 'airenas/' + name
}

remotes {
    server1 {
        host = '193.219.38.47'
        user = 'airenas'
        identity = file(System.getProperty("user.home") + '/.ssh/id_rsa')
        port=7022
    }
}

task clean(type: Delete, group: group, description: "Deletes copied resources") {
    delete distDir
    dependsOn 'web:clean'
}

task copy_remote(group: group, description: "Copies all data to server") {
    doLast {
        ssh.run {
            session(remotes.server1) {
                put from: servicesDir, into: '/home/airenas/'
            }
        }
    }
}

task docker_push_mouth(type: Exec, group: group, description: "Push mouth docker image to cloud") {
    commandLine 'docker', 'push', 'airenas/mouth'
     dependsOn 'mouth:docker_build'
}

task docker_push_membrane(type: Exec, group: group, description: "Push membrane docker image to cloud") {
    commandLine 'docker', 'push', 'airenas/membrane'
}

task docker_push_web(type: Exec, group: group, description: "Push web docker image to cloud") {
    commandLine 'docker', 'push', 'airenas/ear-app:' + earAppVersion
    dependsOn 'web:docker_build'
}

task docker_push(group: group, description: "Push docker container to cloud") {
    dependsOn docker_push_web
}

task deploy(group: group, description: "Deploys services to server") {
    dependsOn('copy_remote')
    doLast {
        ssh.run {
            session(remotes.server1) {
                execute 'cd services && docker-compose stop && docker-compose rm -f && docker-compose pull && docker-compose up -d'
            }
        }
    }
    mustRunAfter docker_push
}

task build_deploy_all(group: group, description: "Builds images and deploys services to server") {
    dependsOn('docker_push')
    dependsOn('deploy')
}

task copy_kaldi(group: group, description: "Copies kaldi init data") {
    doLast {
        ssh.run {
            session(remotes.server1) {
                put from: '/home/airenas/projects/kaldi_test/configure.kaldi.sh', into: '/home/airenas/list'
            }
        }
    }
}

task copy_kolt(group: group, description: "Copies kolt data") {
    doLast {
        ssh.run {
            session(remotes.server1) {
                put from: '/home/airenas/projects/kaldi_test/kolt', into: '/home/airenas/list'
            }
        }
    }
}

task copy_brain(group: group, description: "Copies brain data") {
    doLast {
        ssh.run {
            session(remotes.server1) {
                put from: '/home/airenas/projects/spetra/src/go/brain', into: '/home/airenas/list'
            }
        }
    }
}

