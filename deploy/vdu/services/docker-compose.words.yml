version: '3.7'

services:
  web:
    image: airenas/ear-app:${EAR_APP_VERSION}
    restart: unless-stopped
    environment:
      BASE_HREF: /${URL_WORDS}/
    labels:
     - "traefik.enable=true"
     - "traefik.http.frontend.rule=PathPrefixStrip:/${URL_WORDS}/"
     - "traefik.http.port=8000"

  upload-service:
    image: airenas/list-upload-service:${UPLOAD_SERVICE_VERSION}
    restart: unless-stopped
    volumes:
      - fileStorage:/data
    environment:
      MESSAGESERVER_URL: ${LIST_RABBITMQ_URL}
      MESSAGESERVER_USER: ${LIST_RABBITMQ_USER}
      MESSAGESERVER_PASS: ${LIST_RABBITMQ_PASS}
      MESSAGESERVER_PREFIX: words
      MONGO_URL: ${LIST_MONGO_URL}
    labels:
     - "traefik.frontend.rule=PathPrefixStrip:/${URL_WORDS}/transcriber/"
     - "traefik.port=8000"  
  
  result-service:
    image: airenas/list-result-service:${RESULT_SERVICE_VERSION}
    restart: unless-stopped
    volumes:
      - fileStorage:/data
    environment:
      MONGO_URL: ${LIST_MONGO_URL}
    labels:
     - "traefik.frontend.rule=PathPrefixStrip:/${URL_WORDS}/result.service/"
     - "traefik.port=8000"     

  status-service:
    image: airenas/list-status-service:${STATUS_SERVICE_VERSION}
    restart: unless-stopped
    environment:
      MESSAGESERVER_URL: ${LIST_RABBITMQ_URL}
      MESSAGESERVER_USER: ${LIST_RABBITMQ_USER}
      MESSAGESERVER_PASS: ${LIST_RABBITMQ_PASS}
      MESSAGESERVER_PREFIX: words
      MONGO_URL: ${LIST_MONGO_URL}    
    labels:
     - "traefik.frontend.rule=PathPrefixStrip:/${URL_WORDS}/status.service/"
     - "traefik.port=8000" 
  
  manager-service:
    image: airenas/list-manager-service:${MANAGER_SERVICE_VERSION}
    restart: unless-stopped
    environment:
      MESSAGESERVER_URL: ${LIST_RABBITMQ_URL}
      MESSAGESERVER_USER: ${LIST_RABBITMQ_USER}
      MESSAGESERVER_PASS: ${LIST_RABBITMQ_PASS}
      MESSAGESERVER_PREFIX: words
      MONGO_URL: ${LIST_MONGO_URL}  

  audio-prepare-service:
    image: airenas/list-audio-prepare-service:${AUDIO_PREPARE_SERVICE_VERSION}
    restart: unless-stopped
    environment:
      MESSAGESERVER_URL: ${LIST_RABBITMQ_URL}
      MESSAGESERVER_USER: ${LIST_RABBITMQ_USER}
      MESSAGESERVER_PASS: ${LIST_RABBITMQ_PASS}  
      MESSAGESERVER_PREFIX: words
    volumes:
      - fileStorage:/data

  diarization-service:
    image: airenas/list-diarization-service:${DIARIZATION_SERVICE_VERSION}
    restart: unless-stopped
    environment:
      MESSAGESERVER_URL: ${LIST_RABBITMQ_URL}
      MESSAGESERVER_USER: ${LIST_RABBITMQ_USER}
      MESSAGESERVER_PASS: ${LIST_RABBITMQ_PASS}  
      MESSAGESERVER_PREFIX: words
    volumes:
      - fileStorage:/data    
      - appsStorage:/apps
      - dModelsStorageWords:/models    
  
  transcription-service:
    image: airenas/list-transcription-service:${TRANSCRIPTION_SERVICE_VERSION}
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 3
    environment:
      MESSAGESERVER_URL: ${LIST_RABBITMQ_URL}
      MESSAGESERVER_USER: ${LIST_RABBITMQ_USER}
      MESSAGESERVER_PASS: ${LIST_RABBITMQ_PASS}  
      MESSAGESERVER_PREFIX: words
    volumes:
      - fileStorage:/data    
      - appsStorage:/apps
      - modelsStorageWords:/models      
  
  result-make-service:
    image: airenas/list-result-make-service:${TR_RESULT_SERVICE_VERSION}
    restart: unless-stopped
    environment:
      MESSAGESERVER_URL: ${LIST_RABBITMQ_URL}
      MESSAGESERVER_USER: ${LIST_RABBITMQ_USER}
      MESSAGESERVER_PASS: ${LIST_RABBITMQ_PASS}  
      MESSAGESERVER_PREFIX: words
    volumes:
      - fileStorage:/data    
      - appsStorage:/apps
      - modelsStorageWords:/models 

  inform-service:
    image: airenas/list-inform-service:${INFORM_SERVICE_VERSION}
    restart: unless-stopped
    environment:
      MESSAGESERVER_URL: ${LIST_RABBITMQ_URL}
      MESSAGESERVER_USER: ${LIST_RABBITMQ_USER}
      MESSAGESERVER_PASS: ${LIST_RABBITMQ_PASS}
      MESSAGESERVER_PREFIX: words
      MONGO_URL: ${LIST_MONGO_URL}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      MAIL_URL: ${MAIL_URL_WORDS}     

# ########### volumes 
volumes:
  fileStorage:
    driver_opts:
      type: none
      device: ${LIST_VOLUMES_DIR}fileStorage
      o: bind

  appsStorage:
    driver_opts:
      type: none
      device: ${LIST_VOLUMES_DIR}apps
      o: bind

  dModelsStorageWords:
    driver_opts:
      type: none
      device: ${LIST_VOLUMES_DIR}models
      o: bind      

  modelsStorageWords:
    driver_opts:
      type: none
      device: ${MODEL_DIR_WORDS}
      o: bind          

networks:
  default:
    external:
      name: list_default      