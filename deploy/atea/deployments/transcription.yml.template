### upload service
---
apiVersion: v1
kind: Service
metadata:
  name: upload
  namespace: aft
spec:
  type: ClusterIP
  ports:
  - name: client-in
    port: 8000
    protocol: TCP
    targetPort: 8000 
  selector:
    app: upload
---    
apiVersion: apps/v1
kind: Deployment
metadata:
  name: upload
  namespace: aft  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: upload
  template:
    metadata:
      labels:
        app: upload
    spec:
      nodeSelector:
        nodetype: transcriber
      volumes:
      - name: filestorage-vol
        persistentVolumeClaim:
          claimName: filestorage
      - name: modelstorage-vol
        persistentVolumeClaim:
          claimName: modelstorage-2    
      containers:
      - name: upoad
        image: ${DOCKER_REPO}upload-service:${UPLOAD_SERVICE_VERSION}
        ports:
        - containerPort: 8000
          name: client
        env:
        - name: MESSAGESERVER_URL
          value: rabbitmq:5672  
        - name: MESSAGESERVER_USER
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: username  
        - name: MESSAGESERVER_PASS
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: password
        - name: MONGO_USER
          valueFrom:
            secretKeyRef:
              name: mongo-login
              key: username  
        - name: MONGO_PASS
          valueFrom:
            secretKeyRef:
              name: mongo-login
              key: password      
        - name: MONGO_URL
          value: mongodb://$(MONGO_USER):$(MONGO_PASS)@mongo:27017
        volumeMounts:
        - name: filestorage-vol 
          mountPath: /data
        - name: modelstorage-vol 
          mountPath: /models  
      imagePullSecrets:
        - name: semantikacred    
---
### status service
apiVersion: v1
kind: Service
metadata:
  name: status
  namespace: aft
spec:
  type: ClusterIP
  ports:
  - name: client-in
    port: 8000
    protocol: TCP
    targetPort: 8000 
  selector:
    app: status
---    
apiVersion: apps/v1
kind: Deployment
metadata:
  name: status
  namespace: aft  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: status
  template:
    metadata:
      labels:
        app: status
    spec:
      nodeSelector:
        nodetype: transcriber
      containers:
      - name: status
        image: ${DOCKER_REPO}status-service:${STATUS_SERVICE_VERSION}
        ports:
        - containerPort: 8000
          name: client
        env:
        - name: MESSAGESERVER_URL
          value: rabbitmq:5672  
        - name: MESSAGESERVER_USER
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: username  
        - name: MESSAGESERVER_PASS
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: password
        - name: MONGO_USER
          valueFrom:
            secretKeyRef:
              name: mongo-login
              key: username  
        - name: MONGO_PASS
          valueFrom:
            secretKeyRef:
              name: mongo-login
              key: password      
        - name: MONGO_URL
          value: mongodb://$(MONGO_USER):$(MONGO_PASS)@mongo:27017
      imagePullSecrets:
        - name: semantikacred    
---
### result service
apiVersion: v1
kind: Service
metadata:
  name: result
  namespace: aft
spec:
  type: ClusterIP
  ports:
  - name: client-in
    port: 8000
    protocol: TCP
    targetPort: 8000 
  selector:
    app: result
---    
apiVersion: apps/v1
kind: Deployment
metadata:
  name: result
  namespace: aft  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: result
  template:
    metadata:
      labels:
        app: result
    spec:
      nodeSelector:
        nodetype: transcriber
      volumes:
      - name: filestorage-vol
        persistentVolumeClaim:
          claimName: filestorage  
      containers:
      - name: result
        image: ${DOCKER_REPO}result-service:${RESULT_SERVICE_VERSION}
        ports:
        - containerPort: 8000
          name: client
        env:
        - name: MONGO_USER
          valueFrom:
            secretKeyRef:
              name: mongo-login
              key: username  
        - name: MONGO_PASS
          valueFrom:
            secretKeyRef:
              name: mongo-login
              key: password      
        - name: MONGO_URL
          value: mongodb://$(MONGO_USER):$(MONGO_PASS)@mongo:27017
        volumeMounts:
        - name: filestorage-vol 
          mountPath: /data
      imagePullSecrets:
        - name: semantikacred    
---
### manager service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: manager
  namespace: aft  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: manager
  template:
    metadata:
      labels:
        app: manager
    spec:
      nodeSelector:
        nodetype: transcriber
      containers:
      - name: manager
        image: ${DOCKER_REPO}manager-service:${MANAGER_SERVICE_VERSION}
        env:
        - name: MESSAGESERVER_URL
          value: rabbitmq:5672  
        - name: MESSAGESERVER_USER
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: username  
        - name: MESSAGESERVER_PASS
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: password
        - name: MONGO_USER
          valueFrom:
            secretKeyRef:
              name: mongo-login
              key: username  
        - name: MONGO_PASS
          valueFrom:
            secretKeyRef:
              name: mongo-login
              key: password      
        - name: MONGO_URL
          value: mongodb://$(MONGO_USER):$(MONGO_PASS)@mongo:27017
      imagePullSecrets:
        - name: semantikacred    
---    
## audio preparation service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audio-prepare
  namespace: aft  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: audio-prepare
  template:
    metadata:
      labels:
        app: audio-prepare
    spec:
      nodeSelector:
        nodetype: transcriber
      volumes:
      - name: filestorage-vol
        persistentVolumeClaim:
          claimName: filestorage
      - name: modelstorage-vol
        persistentVolumeClaim:
          claimName: modelstorage-2    
      containers:
      - name: audio-prepare
        image: ${DOCKER_REPO}audio-prepare-service:${AUDIO_PREPARE_SERVICE_VERSION}
        env:
        - name: MESSAGESERVER_URL
          value: rabbitmq:5672  
        - name: MESSAGESERVER_USER
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: username  
        - name: MESSAGESERVER_PASS
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: password
        - name: METRICS_URL
          value: http://metrics-collector:8000/metrics      
        volumeMounts:
        - name: filestorage-vol 
          mountPath: /data
        - name: modelstorage-vol 
          mountPath: /models
      imagePullSecrets:
        - name: semantikacred      
---    
## diarization service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: diarization
  namespace: aft  
spec:
  replicas: 5
  selector:
    matchLabels:
      app: diarization
  template:
    metadata:
      labels:
        app: diarization
    spec:
      nodeSelector:
        nodetype: transcriber
      volumes:
      - name: filestorage-vol
        persistentVolumeClaim:
          claimName: filestorage
      - name: appstorage-vol
        persistentVolumeClaim:
          claimName: appstorage
      - name: modelstorage-vol
        persistentVolumeClaim:
          claimName: modelstorage-2       
      containers:
      - name: diarization
        image: ${DOCKER_REPO}diarization-service:${DIARIZATION_SERVICE_VERSION}
        env:
        - name: MESSAGESERVER_URL
          value: rabbitmq:5672  
        - name: MESSAGESERVER_USER
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: username  
        - name: MESSAGESERVER_PASS
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: password
        - name: METRICS_URL
          value: http://metrics-collector:8000/metrics              
        volumeMounts:
        - name: filestorage-vol 
          mountPath: /data
        - name: appstorage-vol 
          mountPath: /apps
        - name: modelstorage-vol 
          mountPath: /models
      imagePullSecrets:
        - name: semantikacred    
---  
#transcription dispatcher      
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transcription-dispatcher
  namespace: aft  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: transcription-dispatcher
  template:
    metadata:
      labels:
        app: transcription-dispatcher
    spec:
      nodeSelector:
        nodetype: transcriber
      volumes:
      - name: filestorage-vol
        persistentVolumeClaim:
          claimName: filestorage
      - name: modelstorage-vol
        persistentVolumeClaim:
          claimName: modelstorage-2        
      containers:
      - name: transcription-dispatcher
        image: ${DOCKER_REPO}dispatcher-service:${DISPATCHER_SERVICE_VERSION}
        env:
        - name: MESSAGESERVER_URL
          value: rabbitmq:5672  
        - name: MESSAGESERVER_USER
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: username  
        - name: MESSAGESERVER_PASS
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: password
        - name: DISPATCHER_REGISTRATIONQUEUE
          value: TranscriptionWorker_Registry
        - name: DISPATCHER_WORKQUEUE
          value: Transcription
        - name: RECOGNIZERCONFIG_KEY
          value: transcription-preload_key
        - name: STRATEGY_MODELLOADDURATION
          value: 10s
        - name: STRATEGY_REALTIMEFACTOR
          value: "0.4"  
        - name: LOGGER_LEVEL
          value: debug
        volumeMounts:
        - name: filestorage-vol 
          mountPath: /data
        - name: modelstorage-vol 
          mountPath: /models 
      imagePullSecrets:
        - name: semantikacred       
---
## transcription service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transcription
  namespace: aft  
spec:
  replicas: 3
  selector:
    matchLabels:
      app: transcription
  template:
    metadata:
      labels:
        app: transcription
    spec:
      nodeSelector:
        nodetype: transcriber
      volumes:
      - name: filestorage-vol
        persistentVolumeClaim:
          claimName: filestorage
      - name: appstorage-vol
        persistentVolumeClaim:
          claimName: appstorage
      - name: modelstorage-vol
        persistentVolumeClaim:
          claimName: modelstorage-2        
      containers:
      - name: transcription
        image: ${DOCKER_REPO}transcription-service:${TRANSCRIPTION_SERVICE_VERSION}
        env:
        - name: MESSAGESERVER_URL
          value: rabbitmq:5672  
        - name: MESSAGESERVER_USER
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: username  
        - name: MESSAGESERVER_PASS
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: password
        - name: METRICS_URL
          value: http://metrics-collector:8000/metrics      
        volumeMounts:
        - name: filestorage-vol 
          mountPath: /data
        - name: appstorage-vol 
          mountPath: /apps
        - name: modelstorage-vol 
          mountPath: /models
      imagePullSecrets:
        - name: semantikacred    
---  
#rescore dispatcher      
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rescore-dispatcher
  namespace: aft  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rescore-dispatcher
  template:
    metadata:
      labels:
        app: rescore-dispatcher
    spec:
      nodeSelector:
        nodetype: transcriber
      volumes:
      - name: filestorage-vol
        persistentVolumeClaim:
          claimName: filestorage
      - name: modelstorage-vol
        persistentVolumeClaim:
          claimName: modelstorage-2        
      containers:
      - name: rescore-dispatcher
        image: ${DOCKER_REPO}dispatcher-service:${DISPATCHER_SERVICE_VERSION}
        env:
        - name: MESSAGESERVER_URL
          value: rabbitmq:5672  
        - name: MESSAGESERVER_USER
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: username  
        - name: MESSAGESERVER_PASS
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: password
        - name: DISPATCHER_REGISTRATIONQUEUE
          value: RescoreWorker_Registry
        - name: DISPATCHER_WORKQUEUE
          value: Rescore
        - name: RECOGNIZERCONFIG_KEY
          value: rescore-preload_key
        - name: STRATEGY_MODELLOADDURATION
          value: 1m
        - name: STRATEGY_REALTIMEFACTOR
          value: "0.5"  
        - name: LOGGER_LEVEL
          value: debug
        volumeMounts:
        - name: filestorage-vol 
          mountPath: /data
        - name: modelstorage-vol 
          mountPath: /models 
      imagePullSecrets:
        - name: semantikacred       
---    
## rescore worker
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rescore
  namespace: aft  
spec:
  replicas: 4
  selector:
    matchLabels:
      app: rescore
  template:
    metadata:
      labels:
        app: rescore
    spec:
      nodeSelector:
        nodetype: transcriber
      volumes:
      - name: filestorage-vol
        persistentVolumeClaim:
          claimName: filestorage
      - name: appstorage-vol
        persistentVolumeClaim:
          claimName: appstorage
      - name: modelstorage-vol
        persistentVolumeClaim:
          claimName: modelstorage-2        
      containers:
      - name: rescore
        image: ${DOCKER_REPO}rescore-service:${TR_RESCORE_SERVICE_VERSION}
        env:
        - name: MESSAGESERVER_URL
          value: rabbitmq:5672  
        - name: MESSAGESERVER_USER
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: username  
        - name: MESSAGESERVER_PASS
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: password
        - name: METRICS_URL
          value: http://metrics-collector:8000/metrics
        - name: LOGGER_LEVEL
          value: debug  
        volumeMounts:
        - name: filestorage-vol 
          mountPath: /data
        - name: appstorage-vol 
          mountPath: /apps
        - name: modelstorage-vol 
          mountPath: /models
      imagePullSecrets:
        - name: semantikacred   
---    
## resultmake worker
apiVersion: apps/v1
kind: Deployment
metadata:
  name: result-make
  namespace: aft  
spec:
  replicas: 4
  selector:
    matchLabels:
      app: result-make
  template:
    metadata:
      labels:
        app: result-make
    spec:
      nodeSelector:
        nodetype: transcriber
      volumes:
      - name: filestorage-vol
        persistentVolumeClaim:
          claimName: filestorage
      - name: appstorage-vol
        persistentVolumeClaim:
          claimName: appstorage
      - name: modelstorage-vol
        persistentVolumeClaim:
          claimName: modelstorage-2        
      containers:
      - name: result-make
        image: ${DOCKER_REPO}result-make-service:${TR_RESULT_SERVICE_VERSION}
        env:
        - name: MESSAGESERVER_URL
          value: rabbitmq:5672  
        - name: MESSAGESERVER_USER
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: username  
        - name: MESSAGESERVER_PASS
          valueFrom:
            secretKeyRef:
              name: rabbit-mq-login
              key: password
        - name: PR_URL
          value: http://punctuation:8000/punctuationArray
        - name: METRICS_URL
          value: http://metrics-collector:8000/metrics
        volumeMounts:
        - name: filestorage-vol 
          mountPath: /data
        - name: appstorage-vol 
          mountPath: /apps
        - name: modelstorage-vol 
          mountPath: /models
      imagePullSecrets:
        - name: semantikacred
---    
### tensorflow service
apiVersion: v1
kind: Service
metadata:
  name: tensorflow
  namespace: aft
spec:
  type: ClusterIP
  ports:
  - name: client-in
    port: 8500
    protocol: TCP
    targetPort: 8500 
  selector:
    app: tensorflow
---   
## tensorflow
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tensorflow
  namespace: aft  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tensorflow
  template:
    metadata:
      labels:
        app: tensorflow
    spec:
      nodeSelector:
        nodetype: transcriber
      volumes:
      - name: modelstorage-vol
        persistentVolumeClaim:
          claimName: modelstorage-2        
      containers:
      - name: tensorflow
        image: tensorflow/serving:1.14.0
        env:
        - name: MODEL_NAME
          value: punctuation  
        - name: MODEL_BASE_PATH
          value: /models/punctuation/models
        volumeMounts:
        - name: modelstorage-vol
          mountPath: /models
---
### punctuation service
apiVersion: v1
kind: Service
metadata:
  name: punctuation
  namespace: aft
spec:
  type: ClusterIP
  ports:
  - name: client-in
    port: 8000
    protocol: TCP
    targetPort: 8000 
  selector:
    app: punctuation
---    
## punctuation
apiVersion: apps/v1
kind: Deployment
metadata:
  name: punctuation
  namespace: aft  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: punctuation
  template:
    metadata:
      labels:
        app: punctuation
    spec:
      nodeSelector:
        nodetype: transcriber
      volumes:
      - name: modelstorage-vol
        persistentVolumeClaim:
          claimName: modelstorage-2        
      containers:
      - name: punctuation
        image: ${DOCKER_REPO}punctuation-service:${PUNCTUATION_SERVICE_VERSION}
        env:
        - name: TF_URL
          value: tensorflow:8500  
        - name: MODELDIR
          value: /models/punctuation/2.0    
        volumeMounts:
        - name: modelstorage-vol
          mountPath: /models
      imagePullSecrets:
        - name: semantikacred    
### clean service
---
apiVersion: v1
kind: Service
metadata:
  name: clean
  namespace: aft
spec:
  type: ClusterIP
  ports:
  - name: client-in
    port: 8000
    protocol: TCP
    targetPort: 8000 
  selector:
    app: clean
---    
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clean
  namespace: aft  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clean
  template:
    metadata:
      labels:
        app: clean
    spec:
      nodeSelector:
        nodetype: transcriber
      volumes:
      - name: filestorage-vol
        persistentVolumeClaim:
          claimName: filestorage
      containers:
      - name: clean
        image: ${DOCKER_REPO}clean-service:${CLEAN_SERVICE_VERSION}
        ports:
        - containerPort: 8000
          name: client
        env:
        - name: MONGO_USER
          valueFrom:
            secretKeyRef:
              name: mongo-login
              key: username  
        - name: MONGO_PASS
          valueFrom:
            secretKeyRef:
              name: mongo-login
              key: password      
        - name: MONGO_URL
          value: mongodb://$(MONGO_USER):$(MONGO_PASS)@mongo:27017
        volumeMounts:
        - name: filestorage-vol 
          mountPath: /data
      imagePullSecrets:
        - name: semantikacred